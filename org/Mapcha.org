* Home Page

Title of project
Description of project
Study area on a map with plots on the map (color ramp for plots red-green based on number of samples filled in)

* Admin Page

1. Create Project
2. Upload bounding box
3. Input number of plots per areal units
4. Input buffer size for each plot
5. Input number of samples per plot
6. Input list of categories per sample

1. Upload a plots and point shapefile (point features are the categories list)

1. Satellite Imagery Selection:
   Admin should be able to select the imagery datasource (Google Earth Engine, locally hosted "chipset", other image server)
   NOTE: Imagery for the prototype should be drawn from Google Earth API (DEPRECATED!)
         Our best alternative is https://www.digitalglobe.com/ (Maps API, GBDX, Basemap)

1. Launch Project

1. God Screen
   - show map

* User Page

Unique URL per project (e.g., http://mapcha.sig-gis.com/project/my-project-name

Register/Login/Logout pages
- First Name
- Last Name
- Institution
- Username
- Password
- Optional: Facebook authentication

* User Page

Page Components:

1. Map image front and center (hi-res imagery, plot boundary, samples in gray)
2. List of categories to fill in with description and example
3. Date of hi-res imagery (month and year)
4. Plots completed
5. Percent agreement with other users

User workflow:

1. Randomly assign a plot to the user based on those that have been analyzed by the least number of users
2. Click sample
3. Click category (or unknown)
4. Once all are assigned, click Submit
5. Increment metadata on this plot for number of users that have worked on this one
6. Perform submission procedure (see below)
7. Show next plot

Submission procedure:

1. Record sample assignments
2. Record date and source of the imagery
3. Record username
4. Record IP address of the user

* Initial Study Area: Mekong River Region

- Laos
- Cambodia
- Vietnam
- Thailand
- Myanmar

Inside this bounding box, put 10,000 plots (with 100m radius buffers) each with 15 samples.

Categories:
- Forest
- Grassland
- Bare Surface
- Impervious Surface
- Agriculture
- Urban
- Water
- Cloud
- Unknown

* MAPCHA Users and Samples

In order to maintain records of the MAPCHA image samples analyzed by
our users, we will need to add a few tables to our database. To keep
these organized, we create the *mapcha* schema.

#+name: create-mapcha-schema
#+begin_src sql :engine postgresql :cmdline mapcha :results silent :exports code
CREATE SCHEMA mapcha;
#+end_src

We will store each user's email and password in the mapcha.users
table. Emails must be unique but may be changed by the user through
the web interface. Each user will also have a role assigned to them,
which determines which pages on the site they are allowed to access.
Whenever a user assigns a value to an image sample, this assignment
will be recorded in the mapcha.user_samples table along with the date
it was completed.

#+name: create-mapcha-plot-tables
#+begin_src sql :engine postgresql :cmdline mapcha :results silent :exports code
CREATE TABLE mapcha.projects (
  id          serial primary key,
  name        text not null,
  description text,
  boundary    geometry(Polygon,4326)
);

CREATE TABLE mapcha.plots (
  id         serial primary key,
  project_id integer not null references mapcha.projects (id) on delete restrict on update cascade,
  center     geometry(Point,4326),
  radius     double precision
);
#+end_src

#+name: create-mapcha-sample-tables
#+begin_src sql :engine postgresql :cmdline mapcha :results silent :exports code
CREATE TABLE mapcha.sample_values (
  id    serial primary key,
  value text not null
);

CREATE TABLE mapcha.samples (
  id      serial primary key,
  plot_id integer not null references mapcha.plots (id) on delete restrict on update cascade,
  point   geometry(Point,4326)
);

CREATE INDEX mapcha_samples_plot_id ON mapcha.samples (plot_id);
#+end_src

#+name: create-mapcha-user-tables
#+begin_src sql :engine postgresql :cmdline mapcha :results silent :exports code
CREATE TABLE mapcha.users (
  id        serial primary key,
  email     text not null,
  password  text not null,
  role      text not null,
  reset_key text
);

CREATE INDEX mapcha_users_email ON mapcha.users (email);

CREATE TABLE mapcha.user_samples (
  id        serial primary key,
  user_id   integer not null references mapcha.users (id) on delete restrict on update cascade,
  sample_id integer not null references mapcha.samples (id) on delete restrict on update cascade,
  value_id  integer not null references mapcha.sample_values (id) on delete restrict on update cascade
);

CREATE INDEX mapcha_user_samples_user_id ON mapcha.user_samples (user_id);
CREATE INDEX mapcha_user_samples_sample_id ON mapcha.user_samples (sample_id);
#+end_src

Now that our tables are set up, we can try some simple experiments to
verify that inserting and querying are working correctly.

#+name: insert-mapcha-users-test-data
#+begin_src sql :engine postgresql :cmdline mapcha_fire_weather :results silent :exports code
INSERT INTO mapcha.users (identity, password)
  VALUES ('admin@sig-gis.com'   , '$2a$10$i0k5ea41qhO7cyEqhffdz.Ck7XqzpxMmWxgZdJObvIYabS7L3txCy'),
         ('gjohnson@sig-gis.com', '$2a$10$FgDZDsUPacZrRbqe0Ia0guVpxb.z7oKPEW6ONf0b6tRVJ3ZlNh4fu')
  RETURNING identity, password;

INSERT INTO mapcha.user_roles (identity, role)
  VALUES ('admin@sig-gis.com'   , 'admin'),
         ('admin@sig-gis.com'   , 'user'),
         ('gjohnson@sig-gis.com', 'user')
  RETURNING identity, role;

INSERT INTO mapcha.user_reports (identity, address, longitude,
                               latitude, date_completed,
                               fire_risk_mean, fire_risk_stddev,
                               fire_hazard_mean, fire_hazard_stddev,
                               fire_weather_mean, fire_weather_stddev,
                               combined_score, cost)
  VALUES ('gjohnson@sig-gis.com', '135 North Champlain St, APT 4, Burlington, VT 05401', -73.217975, 44.484324,
          to_timestamp('2012-11-12', 'YYYY-MM-DD'), 80.0, 2.5, 75.3, 4.0, 32.0, 28.8, 62.4333333, 90.0),
         ('gjohnson@sig-gis.com', '69 Pearl St, APT 302, Burlington, VT 05401', -73.216039, 44.480246,
          to_timestamp('2012-11-18', 'YYYY-MM-DD'), 74.0, 33.0, 89.0, 50.4, 25.0, 1.6, 62.6666666, 90.0),
         ('gjohnson@sig-gis.com', '3248 Northhampton Court, Pleasanton, CA 94588', -121.871221, 37.69435199999999,
          to_timestamp('2013-07-05', 'YYYY-MM-DD'), 45.0, 3.3, 15.0, 6.7, 58.0, 24.0, 39.3333333, 90.0)
  RETURNING *;
#+end_src

#+name: show-mapcha-user-info
#+begin_src sql :engine postgresql :cmdline mapcha_fire_weather :exports both
SELECT identity, password, array_agg(role) AS roles
  FROM mapcha.users
  INNER JOIN mapcha.user_roles USING (identity)
  WHERE identity = 'gjohnson@sig-gis.com'
  GROUP BY identity, password;
#+end_src

#+RESULTS: show-mapcha-user-info
| identity             | password                                                     | roles  |
|----------------------+--------------------------------------------------------------+--------|
| gjohnson@sig-gis.com | $2a$10$FgDZDsUPacZrRbqe0Ia0guVpxb.z7oKPEW6ONf0b6tRVJ3ZlNh4fu | {user} |

#+name: show-mapcha-user-reports
#+begin_src sql :engine postgresql :cmdline mapcha_fire_weather :exports both
SELECT *
  FROM mapcha.user_reports
  WHERE identity = 'gjohnson@sig-gis.com';
#+end_src

#+RESULTS: show-mapcha-user-reports
| id | identity             | address                                             |   longitude |  latitude | date_completed | fire_risk_mean | fire_risk_stddev | fire_hazard_mean | fire_hazard_stddev | fire_weather_mean | fire_weather_stddev | combined_score | cost |
|----+----------------------+-----------------------------------------------------+-------------+-----------+----------------+----------------+------------------+------------------+--------------------+-------------------+---------------------+----------------+------|
|  1 | gjohnson@sig-gis.com | 135 North Champlain St, APT 4, Burlington, VT 05401 |  -73.217975 | 44.484324 |     2012-11-12 |             80 |              2.5 |             75.3 |                  4 |                32 |                28.8 |     62.4333333 |   90 |
|  2 | gjohnson@sig-gis.com | 69 Pearl St, APT 302, Burlington, VT 05401          |  -73.216039 | 44.480246 |     2012-11-18 |             74 |               33 |               89 |               50.4 |                25 |                 1.6 |     62.6666666 |   90 |
|  3 | gjohnson@sig-gis.com | 3248 Northhampton Court, Pleasanton, CA 94588       | -121.871221 | 37.694352 |     2013-07-05 |             45 |              3.3 |               15 |                6.7 |                58 |                  24 |     39.3333333 |   90 |

